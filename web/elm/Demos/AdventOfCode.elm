module Main exposing (..)

import Html exposing (..)


-- Advent of Code Day 1 Input


numbers : String
numbers =




-- Convert input to list of integers.


numbersList : String -> List Int
numbersList string =
    String.split "" string
        |> List.filterMap (\a -> String.toInt a |> Result.toMaybe)



-- PART I
-- Original main implementation for Part I.


mainOriginal : Html a
mainOriginal =
    numbersList numbers
        |> foldPairsCycle sum []
        |> List.sum
        |> toString
        |> text


sum : x -> x -> List x -> List x
sum a b r =
    if a == b then
        a :: r
    else
        r


foldPairsCycle : (x -> x -> r -> r) -> r -> List x -> r
foldPairsCycle func result list =
    case list of
        [] ->
            result

        first :: rest ->
            foldPairsCycleHelp first func first rest result


foldPairsCycleHelp : x -> (x -> x -> r -> r) -> x -> List x -> r -> r
foldPairsCycleHelp first func a list result =
    case list of
        [] ->
            func a first result

        b :: rest ->
            func a b result |> foldPairsCycleHelp first func b rest



-- PART II
-- Main implementation for Part II.


main : Html msg
main =
    let
        listOfNumbers =
            numbersList numbers

        arrangedListOfNumbers =
            splitList 1 listOfNumbers
    in
        List.map2
            (\a b ->
                if a /= b then
                    0
                else
                    a
            )
            listOfNumbers
            arrangedListOfNumbers
            |> List.sum
            |> toString
            |> text



-- Split and arrange list of integers.


splitList : Int -> List a -> List a
splitList num list =
    List.drop num list ++ List.take num list
